{
	"name": "CallTransformationPUTTest",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlobGen2",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "externalCall1",
					"linkedService": {
						"referenceName": "ReqRes",
						"type": "LinkedServiceReference"
					}
				},
				{
					"name": "select1"
				},
				{
					"name": "select2"
				}
			],
			"scriptLines": [
				"source(output(",
				"          id as short,",
				"          userName as string,",
				"          code as string",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     fileSystem: 'restserver',",
				"     fileName: 'fileDetails.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"select1 call(mapColumn(",
				"          email,",
				"          password",
				"     ),",
				"     skipDuplicateMapInputs: false,",
				"     skipDuplicateMapOutputs: false,",
				"     output(",
				"          headers as [string,string],",
				"          body as (error as string),",
				"          status as string",
				"     ),",
				"     allowSchemaDrift: true,",
				"     format: 'rest',",
				"     store: 'restservice',",
				"     timeout: 30,",
				"     requestInterval: 0,",
				"     httpMethod: 'POST',",
				"     entity: '/api/login',",
				"     headerColumnName: 'headers',",
				"     bodyColumnName: 'body',",
				"     statusColumnName: 'status',",
				"     addResponseCode: true,",
				"     requestFormat: ['type' -> 'json'],",
				"     responseFormat: ['type' -> 'json', 'documentForm' -> 'singleDocument']) ~> externalCall1",
				"source1 select(mapColumn(",
				"          email = userName,",
				"          password = code",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select1",
				"externalCall1 select(mapColumn(",
				"          email,",
				"          password,",
				"          body,",
				"          headers,",
				"          status",
				"     ),",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true) ~> select2",
				"select2 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     store: 'cache',",
				"     format: 'inline',",
				"     output: false,",
				"     saveOrder: 1) ~> sink1"
			]
		}
	}
}