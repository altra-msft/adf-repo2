{
	"name": "ExpWithCommentsDF",
	"properties": {
		"type": "MappingDataFlow",
		"typeProperties": {
			"sources": [
				{
					"linkedService": {
						"referenceName": "AzureBlob",
						"type": "LinkedServiceReference"
					},
					"name": "source1"
				}
			],
			"sinks": [
				{
					"linkedService": {
						"referenceName": "CanarySql",
						"type": "LinkedServiceReference"
					},
					"name": "sink1"
				}
			],
			"transformations": [
				{
					"name": "derivedColumn1"
				}
			],
			"scriptLines": [
				"parameters{",
				"     param1 as string (/*doesn't require env n\"ame*/\"testing\"),",
				"     param2MultilineComment as string (/*doesn't require \r",
				"env n\"ame*/\"testing\"),",
				"     param3 as integer (/*doesn't require env n\"ame*/345),",
				"     param4 as date (/*doesn't require env n\"ame*/currentDate()),",
				"     param5 as [string,string] (/*doesn't require env n\"ame*/[\"name\"->\"Madrid\",\"company\"->\"Microsoft\"])",
				"}",
				"source(output(",
				"          Company as string,",
				"          Place as string,",
				"          Pin as string,",
				"          Date as date",
				"     ),",
				"     useSchema: false,",
				"     allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     ignoreNoFilesFound: false,",
				"     format: 'delimited',",
				"     container: 'cast',",
				"     fileName: 'companies.csv',",
				"     columnDelimiter: ',',",
				"     escapeChar: '\\\\',",
				"     quoteChar: '\\\"',",
				"     columnNamesAsHeader: true) ~> source1",
				"source1 derive(column1 = /*doesn't require env n\"ame*/\"testing\",",
				"          column2 = /*doesn't require \r",
				"env n\"ame*/\"testing\",",
				"          column3 = /*doesn't require env n\"ame*/345,",
				"          column4 = /*doesn't require env n\"ame*/currentDate(),",
				"          column5 = /*doesn't require env n\"ame*/[\"name\" -> \"Madrid\", \"company\" -> \"Microsoft\"]) ~> derivedColumn1",
				"derivedColumn1 sink(allowSchemaDrift: true,",
				"     validateSchema: false,",
				"     format: 'table',",
				"     store: 'sqlserver',",
				"     schemaName: ('TEST'),",
				"     tableName: ('castTestTable'),",
				"     preSQLs:['create table [TEST].[castTestTable](Company varchar(20),Place varchar(30),Pin int,establishedIn Date);'],",
				"     insertable: true,",
				"     updateable: false,",
				"     deletable: false,",
				"     upsertable: false,",
				"     skipDuplicateMapInputs: true,",
				"     skipDuplicateMapOutputs: true,",
				"     errorHandlingOption: 'stopOnFirstError') ~> sink1"
			]
		}
	}
}